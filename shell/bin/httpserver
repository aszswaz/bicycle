#!/bin/zsh

# 一个简单的 http 服务器，主要是可以用来查看 HTTP 请求报文

if [[ $1 == "" ]]; then
    port=8080
else
    port=$1
fi

# 加载TCP模块
zmodload zsh/net/tcp
# 监听端口
ztcp -l $port
echo "listen: $port"

# 通过REPLY变量获得socket的文件描述符
server_socket=$REPLY
echo "server socket: $server_socket"

if [[ "$server_socket" == "" ]]; then
    exit 1
fi

# 注册退出信号，在脚本退出的时候关闭端口和连接
trap "ztcp -c $server_socket; ztcp -c $client_socket; exit 0" SIGINT
trap "ztcp -c $server_socket; ztcp -c $client_socket; exit 0" SIGQUIT
trap "ztcp -c $server_socket; ztcp -c $client_socket; exit 0" SIGKILL
trap "ztcp -c $server_socket; ztcp -c $client_socket; exit 0" SIGTERM

while true; do
    echo "Wait for the client to connect..."
    # 等待客户端连接
    ztcp -a $server_socket
    # 获得客户端的socket的文件的描述符
    client_socket=$REPLY
    echo "client socket: $client_socket"
    # 回声
    while read -r line; do
        echo "${line}"
        # read -r 命令会抹掉 \n，\r 会被保留下来，通过 echo 转化一下就能比较
        if [[ "${line}" == "$(echo '\r\n')" || "${line}" == "$(echo '\r')" ]]; then
            break
        fi
    done <&$client_socket

    # 输出响应
    echo -n "HTTP/1.1 200 OK\r\n" >&$client_socket
    echo -n "Content-type: text/plain\r\n" >&$client_socket
    echo -n "Content-Length: 11\r\n" >&$client_socket
    echo -n "\r\n" >&$client_socket
    echo -n "Hello World" >&$client_socket

    echo "client socket ${client_socket} closed."
done
